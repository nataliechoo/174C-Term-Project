/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 miffy_pickup_and_putdown.glb --transform --simplify 
Files: miffy_pickup_and_putdown.glb [20.85MB] > /Users/nataliechoo/CSclasses/174C-Term-Project/3JS-Project/assets/miffy-animation/miffy_pickup_and_putdown-transformed.glb [2.59MB] (88%)
*/

import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export function Model(props) {
  const group = React.useRef()
  const { scene, animations } = useGLTF('/miffy_pickup_and_putdown-transformed.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature">
          <primitive object={nodes.BoneR} />
          <primitive object={nodes.BoneL} />
        </group>
        <mesh name="head" geometry={nodes.head.geometry} material={materials.model_0} position={[-1.434, 54.497, -5.093]} rotation={[Math.PI / 2, 0, 0]} scale={0.369} />
        <mesh name="eyes" geometry={nodes.eyes.geometry} material={materials.model_1} position={[-2.309, 51.293, 13.178]} rotation={[Math.PI / 2, 0, 0]} scale={0.369} />
        <mesh name="body" geometry={nodes.body.geometry} material={materials.model_3} position={[-1.5, 23.595, -4.464]} rotation={[Math.PI / 2, 0, 0]} scale={0.369} />
        <skinnedMesh name="L_arm" geometry={nodes.L_arm.geometry} material={materials.model_3} skeleton={nodes.L_arm.skeleton} />
        <skinnedMesh name="R_arm" geometry={nodes.R_arm.geometry} material={materials.model_3} skeleton={nodes.R_arm.skeleton} />
      </group>
    </group>
  )
}

useGLTF.preload('/miffy_pickup_and_putdown-transformed.glb')
